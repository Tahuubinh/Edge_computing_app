const algorithms = {
    algorithmNames: ['PPO', 'DQN', 'A2C', 'SAC', 'TRPO'],
    algoParams: ['Training time slots', 'Verbose', 'Random seed'],
    envParams: [
        'Time slots',
        'Priority coefficient', 'Number of servers',
        'Length each time slot', 'Battery capacity',
        'Server service rate', 'Workload (λ)',
        'Network congestion (k)', 'Back up power coefficient (φ)',
        'Battery depreciation coefficient (ω)', 'Base station static power',
        'Dynamic power coefficient', 'Server power consumption',
        'Time steps per episode'
    ],
    algoMapping: {
        'Training time slots': 'train_time_slots',
        'Verbose': 'verbose',
        'Random seed': 'random_seed',
    },
    envMapping: {
        'Time slots': 'time_slots',
        'Priority coefficient': 'p_coeff',
        'Number of servers': 'max_number_of_server',
        'Length each time slot': 'timeslot_duration',
        'Battery capacity': 'batery_capacity',
        'Server service rate': 'server_service_rate',
        'Workload (λ)': {high: 'lamda_high', low: 'lamda_low'},
        'Network congestion (k)': {high: 'h_high', low: 'h_low'},
        'Back up power coefficient (φ)': 'back_up_cost_coef',
        'Battery depreciation coefficient (ω)': 'normalized_unit_depreciation_cost',
        'Base station static power': 'd_sta',
        'Dynamic power coefficient': 'coef_dyn',
        'Server power consumption': 'server_power_consumption',
        'Time steps per episode': 'time_steps_per_episode',
    },
    paramDescription: {
        'Training time slots': 'Total time slots used for training model',
        'Verbose': 'Verbose of model',
        'Random seed': 'An int random seed',
        'Time slots': 'Total time slots used in testing',
        'Priority coefficient': 'Priority coefficient',
        'Number of servers': 'Number of server in testing (nodes)',
        'Length each time slot': 'Length each time slot (minutes)',
        'Battery capacity': 'Total capacity of the battery (Wh)',
        'Server service rate': 'Service rate of edge server (units/s)',
        'Workload (λ)': {high: 'Max workload (units/s)', low: 'Min workload (units/s)'},
        'Network congestion (k)': {high: 'Max network congestion (s/unit)', low: 'Min network congestion (s/unit)'},
        'Back up power coefficient (φ)': 'Back up power coefficient param',
        'Battery depreciation coefficient (ω)': 'Battery depreciation coefficient param',
        'Base station static power': 'Power of the base station (W)',
        'Dynamic power coefficient': 'Dynamic power coefficient (this is our own proposal)',
        'Server power consumption': 'Power consumption of server (W)',
        'Time steps per episode': 'Total time steps of each episode',
    }
  };

export { algorithms };
